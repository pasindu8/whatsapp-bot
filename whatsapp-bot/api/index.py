from flask import Flask, request
import requests
import os

app = Flask(__name__)

INSTANCE_ID = "instance127525"
TOKEN = "anay3jh9z0gtsqra45ggg" # ‡∂î‡∂∂‡∑ö ‡∑É‡∂≠‡∑ä‚Äç‡∂∫ token ‡∂ë‡∂ö

def send_reply(to_number, message):
    # chat message API ‡∂ë‡∂ö ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö URL ‡∂ë‡∂ö
    base_url = f"https://api.ultramsg.com/{INSTANCE_ID}/messages/chat"

    # URL ‡∂ë‡∂ö‡∂ß ‡∂∫‡∂± parameters (query string)
    # Ultramsg ‡∑Ñ‡∑í ‡∂Ø‡∑ù‡∑Ç ‡∂¥‡∂´‡∑í‡∑Ä‡∑í‡∂©‡∂∫ ‡∂Ö‡∂±‡∑î‡∑Ä 'token' ‡∂ë‡∂ö ‡∂∏‡∑ô‡∂≠‡∂± ‡∂≠‡∑í‡∂∂‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î‡∂∫‡∑í
    url_params = {"token": TOKEN}

    # POST request body ‡∂ë‡∂ö‡∂ß ‡∂∫‡∂± data
    post_data = {"to": to_number, "body": message}

    try:
        # requests.post ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
        # url_params 'params' ‡∂Ω‡∑ô‡∑É ‡∂∫‡∑Ä‡∂±‡∑ä‡∂± (URL query string ‡∑É‡∂≥‡∑Ñ‡∑è)
        # post_data 'data' ‡∂Ω‡∑ô‡∑É ‡∂∫‡∑Ä‡∂±‡∑ä‡∂± (request body ‡∑É‡∂≥‡∑Ñ‡∑è)
        response = requests.post(base_url, params=url_params, data=post_data)
        
        print("Ultramsg API Response:", response.text) # Ultramsg ‡∑Ä‡∑ô‡∂≠‡∑í‡∂±‡∑ä ‡∂Ω‡∑ê‡∂∂‡∑ô‡∂± ‡∑É‡∂∏‡∑ä‡∂¥‡∑ñ‡∂ª‡∑ä‡∂´ ‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂†‡∑è‡∂ª‡∂∫ print ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
        response.raise_for_status() # 4xx ‡∑Ñ‡∑ù 5xx ‡∑Ä‡∑ê‡∂±‡∑í ‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í responses ‡∑É‡∂≥‡∑Ñ‡∑è HTTPError ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂á‡∂≠‡∑í ‡∂ö‡∂ª‡∂∫‡∑í
        print("Reply sent successfully to Ultramsg!")

    except requests.exceptions.HTTPError as errh:
        print(f"HTTP Error occurred: {errh} - Response: {response.text}")
    except requests.exceptions.ConnectionError as errc:
        print(f"Error Connecting: {errc}")
    except requests.exceptions.Timeout as errt:
        print(f"Timeout Error: {errt}")
    except requests.exceptions.RequestException as err:
        print(f"Something went wrong with the request: {err}")
    except Exception as e:
        print(f"An unexpected error occurred while sending reply: {e}")

@app.route('/')
def home():
    return "üöÄ WhatsApp Bot is running!"

@app.route('/webhook', methods=['GET', 'POST'])
def webhook():
    if request.method == 'POST':
        data = request.get_json()
        print("Webhook called:", data)

        if not data or 'data' not in data:
            print("Invalid or missing 'data' key in webhook payload.")
            return "Invalid data", 400

        try:
            from_number = data['data']['from']
            message = data['data']['body']
            print(f"Message from {from_number}: {message}")

            # Bot logic - ‡∂¥‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∑É‡∂≥‡∑Ñ‡∑è ‡∑É‡∂ª‡∂Ω ‡∂ö‡∂ª ‡∂á‡∂≠, ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∂¥‡∂ª‡∑í‡∂Ø‡∑í ‡∑É‡∂ö‡∑É‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
            lower_msg = message.lower()
            if "hello" in lower_msg or "hi" in lower_msg:
                send_reply(from_number, "Hi! How can I help you? üòä")
            elif "info" in lower_msg or "contact" in lower_msg:
                send_reply(from_number, "This is PDBOT üì± Contact: 0723051652")
            elif "lk" in lower_msg: # "lk" ‡∑É‡∂≥‡∑Ñ‡∑è ‡∑Ä‡∑í‡∑Å‡∑ö‡∑Ç reply ‡∂ë‡∂ö‡∂ö‡∑ä
                send_reply(from_number, "You sent 'lk'. Here's a specific response.")
            else:
                send_reply(from_number, "My New WhatsApp Number 0723051652 (PDBOT)")
            
            return "OK", 200

        except KeyError as e:
            print(f"Missing field in webhook data: {e}. Full data: {data}")
            return "Bad request", 400
        except Exception as e:
            print(f"An unexpected error occurred in webhook processing: {e}. Data: {data}")
            return "Internal Server Error", 500

    return "Webhook is live", 200
